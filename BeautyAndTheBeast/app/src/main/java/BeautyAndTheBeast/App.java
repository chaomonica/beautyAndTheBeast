/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package BeautyAndTheBeast;

import java.util.Scanner;
import java.util.HashMap;

public class App {
    private static String[] prompts = { "A TALE AS OLD AS TIME",
            "1. An old lady comes to the castle asking for shelter. Does the prince refuse to let her in? y / n",
            "2. Belle's dad Marice leaves for the fair and doesn't return. Should Belle go searching for him? y / n",
            "3. Belle decides to explore the castle. Should she turn left or right? l / r" };

    private static String[][] responses = { { "", "" },
            { "The old lady turns the prince into a Beast! He must learn to love in order to lift the curse.",
                    "Congrats! The prince dodges a bullet and lives happily ever after." },
            { "Belle finds Maurice at the castle and agrees to take his place as prisoner",
                    "Without her father around, Belle must marry Gaston. The End." } };

    private static boolean[] storyEnders = { false, true, true, false, true, true, true, true, true };
    // index and function
    private static HashMap<Integer, Runnable> yesFunctions = new HashMap<Integer, Runnable>();

    public static void setYesFunc() {

        yesFunctions.put(1, new Runnable() {
            public void run() {
                Cast.belle.increaseHappiness();
            }
        });
    }

    public static void setNoFunc() {

    }

    public static void main(String[] args) {
        System.out.println("Cast:");
        Cast.createCast();
        Cast.printCast();
        System.out.println("Locations:");
        Locations.createLocations();
        Locations.printLocations();

        // set up yes and no funcs
        setYesFunc();
        setNoFunc();

        int chapter = 1;

        Scanner scanner = new Scanner(System.in);

        System.out.println(prompts[0]);

        while (chapter < prompts.length) {
            System.out.println(prompts[chapter]);
            char answer = scanner.next().charAt(0);
            if (answer == 'y') {
                System.out.println(responses[chapter][0]);
                yesFunctions.get(chapter).run();
            } else {
                System.out.println(responses[chapter][1]);
                if (storyEnders[chapter]) {
                    System.out.println("The End");
                    return;
                }
            }
            chapter++;
        }
        scanner.close();

    }
}
